/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SubscriptionFollowModule,
  SubscriptionFollowModuleInterface,
} from "../SubscriptionFollowModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "hub",
        type: "address",
      },
      {
        internalType: "address",
        name: "moduleGlobals",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FollowInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "InitParamsInvalid",
    type: "error",
  },
  {
    inputs: [],
    name: "NotHub",
    type: "error",
  },
  {
    inputs: [],
    name: "HUB",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "followModuleTransferHook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
    ],
    name: "getProfileData",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "initializeFollowModule",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "processFollow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "profileId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "follower",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "followNFTTokenId",
        type: "uint256",
      },
    ],
    name: "validateFollow",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161076c38038061076c83398101604081905261002f916100bd565b816001600160a01b038116610057576040516348be0eb360e01b815260040160405180910390fd5b6001600160a01b03811660808190526040514281527ff1a1fa6b64aa95186f5a1285e76198d0da80d9c5a88062641d447f1d7c54e56c9060200160405180910390a25050506100f0565b80516001600160a01b03811681146100b857600080fd5b919050565b600080604083850312156100d057600080fd5b6100d9836100a1565b91506100e7602084016100a1565b90509250929050565b60805161064d61011f6000396000818160ed01528181610145015281816101900152610226015261064d6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630e096ae1146100675780633cb22cc41461007c57806345b7f60a146100905780639713958a146100c8578063a4c52b86146100e8578063b4616a2a14610127575b600080fd5b61007a610075366004610444565b61013a565b005b61007a61008a3660046104a0565b50505050565b6100b361009e3660046104e8565b60009081526020819052604090205460ff1690565b60405190151581526020015b60405180910390f35b6100db6100d6366004610501565b610183565b6040516100bf919061054d565b61010f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100bf565b61007a6101353660046105a2565b61020d565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461008a576040516313bd2e8360e31b815260040160405180910390fd5b6060336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101ce576040516313bd2e8360e31b815260040160405180910390fd5b82828080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092979650505050505050565b60405163a9ec656360e01b8152600481018490526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9ec656390602401602060405180830381865afa158015610275573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029991906105da565b90506001600160a01b0381166102c257604051636992d36b60e11b815260040160405180910390fd5b8161034e576040516370a0823160e01b81526001600160a01b0384811660048301528216906370a0823190602401602060405180830381865afa15801561030d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033191906105fe565b61008a57604051636992d36b60e11b815260040160405180910390fd5b6040516331a9108f60e11b8152600481018390526001600160a01b038085169190831690636352211e90602401602060405180830381865afa158015610398573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103bc91906105da565b6001600160a01b03161461008a57604051636992d36b60e11b815260040160405180910390fd5b6001600160a01b03811681146103f857600080fd5b50565b60008083601f84011261040d57600080fd5b50813567ffffffffffffffff81111561042557600080fd5b60208301915083602082850101111561043d57600080fd5b9250929050565b6000806000806060858703121561045a57600080fd5b8435610465816103e3565b935060208501359250604085013567ffffffffffffffff81111561048857600080fd5b610494878288016103fb565b95989497509550505050565b600080600080608085870312156104b657600080fd5b8435935060208501356104c8816103e3565b925060408501356104d8816103e3565b9396929550929360600135925050565b6000602082840312156104fa57600080fd5b5035919050565b60008060006040848603121561051657600080fd5b83359250602084013567ffffffffffffffff81111561053457600080fd5b610540868287016103fb565b9497909650939450505050565b600060208083528351808285015260005b8181101561057a5785810183015185820160400152820161055e565b8181111561058c576000604083870101525b50601f01601f1916929092016040019392505050565b6000806000606084860312156105b757600080fd5b8335925060208401356105c9816103e3565b929592945050506040919091013590565b6000602082840312156105ec57600080fd5b81516105f7816103e3565b9392505050565b60006020828403121561061057600080fd5b505191905056fea26469706673582212203a07096e640f3b74216cd16f95ffa7a89860837ae21382333c7902914c570eed64736f6c634300080a0033";

type SubscriptionFollowModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscriptionFollowModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SubscriptionFollowModule__factory extends ContractFactory {
  constructor(...args: SubscriptionFollowModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    hub: string,
    moduleGlobals: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SubscriptionFollowModule> {
    return super.deploy(
      hub,
      moduleGlobals,
      overrides || {}
    ) as Promise<SubscriptionFollowModule>;
  }
  getDeployTransaction(
    hub: string,
    moduleGlobals: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(hub, moduleGlobals, overrides || {});
  }
  attach(address: string): SubscriptionFollowModule {
    return super.attach(address) as SubscriptionFollowModule;
  }
  connect(signer: Signer): SubscriptionFollowModule__factory {
    return super.connect(signer) as SubscriptionFollowModule__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionFollowModuleInterface {
    return new utils.Interface(_abi) as SubscriptionFollowModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SubscriptionFollowModule {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SubscriptionFollowModule;
  }
}
