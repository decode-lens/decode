/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DeceCode, DeceCodeInterface } from "../DeceCode";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "decode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "who",
        type: "address",
      },
    ],
    name: "isAllowed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "setAllowed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104da8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063babcc5391161005b578063babcc539146100f2578063d63a8e111461012e578063e5c5e9a314610151578063f2fde38b1461017257600080fd5b806362a3b39d1461008d578063715018a6146100ae5780638da5cb5b146100b6578063a2fb2cd8146100d6575b600080fd5b6100ac336000908152600460205260409020805460ff19166001179055565b005b6100ac610185565b6000546040516001600160a01b0390911681526020015b60405180910390f35b6100ac336000908152600460205260409020805460ff19169055565b61011e610100366004610394565b6001600160a01b031660009081526004602052604090205460ff1690565b60405190151581526020016100cd565b61011e61013c366004610394565b60046020526000908152604090205460ff1681565b61016461015f3660046103da565b6101f0565b6040519081526020016100cd565b6100ac610180366004610394565b610218565b6000546001600160a01b031633146101e45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6101ee60006102e3565b565b60008082806020019051810190610207919061048b565b905061021281610333565b92915050565b6000546001600160a01b031633146102725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101db565b6001600160a01b0381166102d75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101db565b6102e0816102e3565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6102e08160405160240161034991815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f5b1bba960e01b17905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b6000602082840312156103a657600080fd5b81356001600160a01b03811681146103bd57600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156103ec57600080fd5b813567ffffffffffffffff8082111561040457600080fd5b818401915084601f83011261041857600080fd5b81358181111561042a5761042a6103c4565b604051601f8201601f19908116603f01168101908382118183101715610452576104526103c4565b8160405282815287602084870101111561046b57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561049d57600080fd5b505191905056fea26469706673582212209e819d0938e98043d8fdac5ceab49c8a00cf583d52f15c5cebae44816516757364736f6c634300080a0033";

type DeceCodeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DeceCodeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DeceCode__factory extends ContractFactory {
  constructor(...args: DeceCodeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DeceCode> {
    return super.deploy(overrides || {}) as Promise<DeceCode>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DeceCode {
    return super.attach(address) as DeceCode;
  }
  connect(signer: Signer): DeceCode__factory {
    return super.connect(signer) as DeceCode__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DeceCodeInterface {
    return new utils.Interface(_abi) as DeceCodeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DeceCode {
    return new Contract(address, _abi, signerOrProvider) as DeceCode;
  }
}
